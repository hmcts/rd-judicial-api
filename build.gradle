buildscript {
    dependencies {
        classpath("org.flywaydb:flyway-database-postgresql:11.3.3")
    }
}

plugins {
    id 'application'
    id 'checkstyle'
    id 'idea'
    id 'jacoco'
    id 'pmd'
    id 'project-report'
    id 'au.com.dius.pact' version '4.6.17'
    id 'com.github.ben-manes.versions' version '0.52.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'net.serenity-bdd.serenity-gradle-plugin' version '4.2.33'
    id 'org.owasp.dependencycheck' version '11.1.1'
    id 'org.sonarqube' version '6.0.1.5171'
    id 'org.springframework.boot' version '3.4.3'
    id 'uk.gov.hmcts.java' version '0.12.66'
    id "info.solidsoft.pitest" version '1.15.0'
    id "io.freefair.lombok" version "8.12.2"
    id "org.flywaydb.flyway" version '11.3.3'
}

ext {
    set('springCloudVersion', "2024.0.2")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

def versions = [
        commonsIo          : '2.19.0',
        gradlePitest       : '1.15.0',
        pitest             : '1.16.1',
        sonarPitest        : '0.5',
        junitPitest        : '1.2.1',
        jackson            : '2.18.2',
        launchDarklySdk    : '5.10.9',
        flyway              : '11.3.3',
        lombok              : '1.18.38',
        reformLogging       : '6.1.9',
        serenity            : '4.2.34',
        restAssured         : '5.5.5',
        pact_version        : '4.6.17',
        log4j               : '2.24.3',
        logback             : '1.5.18',
        testContainer_postgresql: '1.20.5',
        bouncycastle        : '1.81',
        jwtVersion          : '0.12.6',
        wiremock            : '3.12.0'
]

application {
    mainClass = 'uk.gov.hmcts.reform.judicialapi.JudicialApplication'

    // this is required to force Java running on the Azure Windows Server OS into using
    // UTF-8 as the default character set instead of windows-1252 which causes issues.
    // this setting only applies when running via gradle bootRun -- see web.config for the
    // java flag that configures the deployed applications
    applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]
}

def jarName = 'rd-judicial-api.jar'

group = 'uk.gov.hmcts.reform.juddata'
version = '0.0.1'

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

sourceSets {

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    functionalTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }

    pactTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/pactTest/java')
        }
        resources.srcDir file('src/pactTest/resources')
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
    }
}

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

task contract(type: Test) {
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/judicialapi/**"
}


task runProviderPactVerification(type: Test) {
    useJUnitPlatform()
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    if (project.hasProperty('pact.verifier.publishResults')) {
        systemProperty 'pact.verifier.publishResults', project.property('pact.verifier.publishResults')
    }
    systemProperty 'pact.provider.version', project.pactVersion
    include "uk/gov/hmcts/reform/judicialapi/provider/**"
}

runProviderPactVerification.dependsOn contract

runProviderPactVerification.finalizedBy pactVerify

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        tags = [System.getenv("PACT_BRANCH_NAME") ?:'Dev']
        version = project.pactVersion
    }
}

configurations {
    integrationTestImplementation.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    functionalTestImplementation.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime
}

pmd {
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest, sourceSets.functionalTest, sourceSets.smokeTest]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSets = []
    ruleSetFiles = files("config/pmd/ruleset.xml")
}

checkstyle {
    maxWarnings = 0
    toolVersion = '10.25.0'
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    finalizedBy aggregate
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {

    systemProperty "scenario", System.getProperty('scenario')

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    finalizedBy aggregate
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    baselineOnMigrate = true
    baselineVersion = '1.1'
    schemas = ['dbjudicialdata']
    locations = ["filesystem:src/main/resources/db/migration"]
    if (project.hasProperty("dburl")) {
        url = "jdbc:postgresql://${dburl}"
    }
    placeholders = ['dbReaderUserName' : System.getenv("DB_READER_USERNAME")]

}

task fortifyScan(type: JavaExec)  {
  main("uk.gov.hmcts.fortifyclient.FortifyClientMainApp")
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
  // This is a temporary fix to prevent the nightly build from failing if the Fortify scan detects issues
  ignoreExitValue = true as JavaExecSpec
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

pitest {
    junit5PluginVersion = versions.junitPitest
    targetClasses = ['uk.gov.hmcts.reform.judicialapi.*']
    testSourceSets = [sourceSets.test]
    excludedClasses = [
            'uk.gov.hmcts.reform.judicialapi.configuration.*',
            'uk.gov.hmcts.reform.judicialapi.controller.*',
            'uk.gov.hmcts.reform.judicialapi.JudicialApplication',
            'uk.gov.hmcts.reform.judicialapi.elinks.configuration.ElinksFeignInterceptorConfiguration',
            'uk.gov.hmcts.reform.judicialapi.elinks.controller.advice.ForbiddenException',
            'uk.gov.hmcts.reform.judicialapi.elinks.service.impl.ELinksServiceImpl',
            'uk.gov.hmcts.reform.judicialapi.elinks.service.impl.ElinksPeopleServiceImpl',
            'uk.gov.hmcts.reform.judicialapi.elinks.service.impl.IdamElasticSearchServiceImpl',
            'uk.gov.hmcts.reform.judicialapi.elinks.configuration.SchedulerConfig',
            'uk.gov.hmcts.reform.judicialapi.elinks.configuration.SendGridConfig',
            'uk.gov.hmcts.reform.judicialapi.elinks.util.DataloadSchedulerJobAudit',
            'uk.gov.hmcts.reform.judicialapi.elinks.scheduler.ElinksApiJobScheduler'
    ]
    threads = 10
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 70
    useClasspathFile = true
}


project.tasks['pitest'].group = "Verification"

sonarqube {
    properties {
        property "sonar.projectName", "RD :: Judicial Reference api"
        property "sonar.projectKey", "RDJUDICIALAPI"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
        property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/judicialapi/configuration/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/JudicialApplication.java,"+
                "src/main/java/uk/gov/hmcts/reform/judicialapi/domain/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/controller/request/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/controller/TestingSupportController.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/controller/feign/IdamUserFeignClient.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/controller/response/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/service/impl/IdamUserProfileServiceImpl.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/repository/IdamUserProfileRepository.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/configuration/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/domain/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/response/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/configuration/ElinksFeignInterceptorConfiguration.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/controller/advice/ForbiddenException.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/service/impl/ELinksServiceImpl.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/service/impl/ElinksPeopleServiceImpl.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/service/impl/IdamElasticSearchServiceImpl.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/configuration/SchedulerConfig.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/configuration/SendGridConfig.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/util/DataloadSchedulerJobAudit.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/exception/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/scheduler/ElinksApiJobScheduler.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/service/impl/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/util/**,"
    }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

repositories {
    mavenLocal()
    mavenCentral()
    maven {url 'https://pkgs.dev.azure.com/hmcts/Artifacts/_packaging/hmcts-lib/maven/v1'}
    }


dependencies {

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIo
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
    implementation group: 'ch.qos.logback', name: 'logback-core', version: versions.logback
    implementation group: 'com.azure', name: 'azure-core', version: '1.55.5'
    implementation group: 'com.azure', name: 'azure-messaging-servicebus', version: '7.17.12'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson
    implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: versions.jackson, ext: 'pom'
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.2.2'
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLogging
    implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '3.0.4'
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '5.3.2'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.13.1'
    implementation group: 'com.google.guava', name: 'guava', version: '33.4.8-jre'
    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: versions.launchDarklySdk
    implementation group: 'com.nimbusds', name: 'lang-tag', version: '1.7'
    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '9.47'
    implementation group: 'com.sendgrid', name: 'sendgrid-java', version: '4.10.3'
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '13.6'
    implementation group: 'io.hypersistence', name: 'hypersistence-utils-hibernate-63', version: '3.10.3'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: versions.jwtVersion
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: versions.jwtVersion
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: versions.jwtVersion
    implementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.1.1'
    implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-provider-jdbc-template', version: '5.16.0'
    implementation group: 'net.javacrumbs.shedlock', name: 'shedlock-spring', version: '5.16.0'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.4'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.17.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j', version: versions.log4j
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: versions.bouncycastle
    implementation group: 'org.flywaydb', name: 'flyway-core', version: versions.flyway
    implementation group: 'org.flywaydb', name: 'flyway-database-postgresql', version: versions.flyway
    implementation group: 'org.json', name: 'json', version: '20240303'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.7'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.8.9'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap'

    testImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-junit5', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    testImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity

    testImplementation group: 'org.testcontainers', name: 'postgresql', version: versions.testContainer_postgresql
    testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: versions.testContainer_postgresql
    testImplementation group: 'org.testcontainers', name: 'testcontainers', version: versions.testContainer_postgresql

    testImplementation group: 'com.github.hmcts', name: 'rd-commons-lib', version: '0.1.2'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '3.0'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.11.0'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '4.11.0'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'
    testImplementation group: 'org.wiremock', name: 'wiremock-standalone', version: versions.wiremock

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation group: 'com.github.mifmif', name: 'generex', version: '1.0.2'
    testImplementation 'com.github.hmcts:fortify-client:1.4.9:all'
    testImplementation group: 'org.codehaus.sonar-plugins', name: 'sonar-pitest-plugin', version: '0.5'

    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
    testImplementation group: 'io.rest-assured', name: 'rest-assured-common', version: versions.restAssured

    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

    functionalTestImplementation sourceSets.main.runtimeClasspath
    functionalTestImplementation sourceSets.test.runtimeClasspath

    smokeTestImplementation sourceSets.main.runtimeClasspath
    smokeTestImplementation sourceSets.test.runtimeClasspath

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

    pactTestImplementation sourceSets.main.runtimeClasspath
    pactTestImplementation sourceSets.test.runtimeClasspath
}

dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

gradle.startParameter.continueOnFailure = true

bootJar {
    archiveFileName = jarName
    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}


tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

rootProject.tasks.named("processSmokeTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processFunctionalTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processIntegrationTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processContractTestResources") {
    duplicatesStrategy = 'include'
}
