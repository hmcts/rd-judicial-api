buildscript {
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.4.34")
    }
}

plugins {
    id 'application'
    id 'jacoco'
    id 'pmd'
    id 'com.github.ben-manes.versions' version '0.42.0'
    id "info.solidsoft.pitest" version '1.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.sonarqube' version '3.3'
    id 'org.springframework.boot' version '2.4.12'
    id "org.flywaydb.flyway" version "8.4.2"
    id "io.freefair.lombok" version "5.3.3.3"
    id 'uk.gov.hmcts.java' version '0.12.12'
    id 'au.com.dius.pact' version '4.1.7'
}

apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'project-report'
apply plugin: 'idea'

def versions = [
        lombok             : '1.18.22',
        pitest             : '1.7.3',
        reformLogging      : '5.1.9',
        serenity           : '2.0.76',
        springBoot         : '2.6.6',
        springfoxSwagger   : '2.9.2',
        restAssured        : '4.3.3',
        jackson            : '2.14.0-rc1',
        launchDarklySdk    : '5.10.2',
        pact_version       : '4.1.7',
        log4j              : '2.17.1',
        springVersion      : '5.3.20',
        logback            : '1.2.11',
        bytebuddy          : '1.12.7',
        testContainer_postgresql: '1.17.2'
]

mainClassName = 'uk.gov.hmcts.reform.judicialapi.JudicialApplication'
def jarName = 'rd-judicial-api.jar'

group = 'uk.gov.hmcts.reform.juddata'
version = '0.0.1'

tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation' << "-Xlint:unchecked" << "-Werror"
}

sourceSets {

    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }

    functionalTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/functionalTest/java')
        }
        resources.srcDir file('src/functionalTest/resources')
    }

    smokeTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/smokeTest/java')
        }
        resources.srcDir file('src/smokeTest/resources')
    }

    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }

    pactTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/pactTest/java')
        }
        resources.srcDir file('src/pactTest/resources')
    }
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
    }
}

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
}

def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

task contract(type: Test) {
    description = 'Runs the consumer Pact tests'
    useJUnitPlatform()
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    include "uk/gov/hmcts/reform/judicialapi/**"
}

task runProviderPactVerification(type: Test) {
    useJUnitPlatform()
    logger.lifecycle("Runs pact Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    systemProperty 'pact.verifier.publishResults', System.getProperty('pact.verifier.publishResults')
    systemProperty 'pact.provider.version', project.pactVersion
}

runProviderPactVerification.dependsOn contract

runProviderPactVerification.finalizedBy pactVerify

pact {
    publish {
        pactDirectory = 'pacts'
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
        tags = [System.getenv("PACT_BRANCH_NAME") ?:'Dev']
        version = project.pactVersion
    }
}

configurations {
    integrationTestImplementation.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    functionalTestImplementation.extendsFrom testCompile
    functionalTestRuntime.extendsFrom testRuntime
}

pmd {
    toolVersion = '6.12.0'
    ignoreFailures = true
    sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest, sourceSets.functionalTest, sourceSets.smokeTest]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSets = [
            'category/java/errorprone.xml',
            'category/java/bestpractices.xml'
    ]
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task functional(type: Test, description: 'Runs the functional tests.', group: 'Verification') {

    systemProperty "scenario", System.getProperty('scenario')

    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    finalizedBy aggregate
}

task smoke(type: Test, description: 'Runs the smoke tests.', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task migratePostgresDatabase(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
    baselineOnMigrate = true
    if (project.hasProperty("dburl")) {
        url = "jdbc:postgresql://${dburl}"
    }
}

task fortifyScan(type: JavaExec)  {
  main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
  // This is a temporary fix to prevent the nightly build from failing if the Fortify scan detects issues
  ignoreExitValue = true
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    executionData(test)
    reports {
        xml.required = true
        csv.required = false
        xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

pitest {
    junit5PluginVersion = '0.15'
    targetClasses = ['uk.gov.hmcts.reform.judicialapi.*']
    testSourceSets = [sourceSets.test]
    excludedClasses = [
            'uk.gov.hmcts.reform.judicialapi.configuration.*',
            'uk.gov.hmcts.reform.judicialapi.controller.*',
            'uk.gov.hmcts.reform.judicialapi.JudicialApplication',
            'uk.gov.hmcts.reform.judicialapi.repository.IdamUserProfileRepository',
            'uk.gov.hmcts.reform.judicialapi.service.impl.IdamUserProfileServiceImpl'

    ]
    threads = 10
    enableDefaultIncrementalAnalysis = true
    historyInputLocation = 'build/reports/pitest/fastermutationtesting'
    historyOutputLocation = 'build/reports/pitest/fastermutationtestingoutput'
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    mutationThreshold = 75
    useClasspathFile = true
}


project.tasks['pitest'].group = "Verification"

sonarqube {
    properties {
        property "sonar.projectName", "RD :: Judicial Reference api"
        property "sonar.projectKey", "RDJUDICIALAPI"
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
        property "sonar.exclusions", "src/main/java/uk/gov/hmcts/reform/judicialapi/configuration/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/JudicialApplication.java,"+
                "src/main/java/uk/gov/hmcts/reform/judicialapi/domain/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/controller/request/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/controller/TestingSupportController.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/controller/feign/IdamUserFeignClient.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/controller/response/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/service/impl/IdamUserProfileServiceImpl.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/repository/IdamUserProfileRepository.java" +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/configuration/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/domain/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/response/**," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/configuration/ElinksFeignInterceptorConfiguration.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/controller/advice/ForbiddenException.java," +
                "src/main/java/uk/gov/hmcts/reform/judicialapi/elinks/util/SqlConstants.java,"
    }
}

project.tasks['sonarqube'].dependsOn test, integration, jacocoTestReport
project.tasks['sonarqube'].group = "Verification"

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json', version: versions.springBoot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: versions.springBoot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: versions.springBoot
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBoot
    implementation group: 'org.springframework.security', name: 'spring-security-core', version: '5.6.1'


    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.0.2'


    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache', version: versions.springBoot

    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.0.5'

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
    implementation group: 'com.fasterxml.jackson', name: 'jackson-bom', version: '2.13.2.20220324', ext: 'pom'

    implementation group: 'javax.inject', name: 'javax.inject', version: '1'
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"
    implementation 'com.github.hmcts:idam-java-client:2.0.1'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j', version: versions.log4j
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.log4j
    implementation group: 'com.sun.xml.bind', name: 'jaxb-osgi', version: '3.0.2'

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger

    implementation 'com.github.hmcts:service-auth-provider-java-client:4.0.3'

    implementation group: 'org.flywaydb', name: 'flyway-core', version: '7.10.0'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.1'
    implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: versions.launchDarklySdk
    implementation group: 'commons-lang', name: 'commons-lang', version: '2.6'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.10'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    implementation group: 'com.nimbusds', name: 'nimbus-jose-jwt', version: '8.20'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: versions.logback
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
    implementation group: 'org.springframework', name: 'spring-core', version: versions.springVersion
   	implementation group: 'org.springframework', name: 'spring-beans', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-aop', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-aspects', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-context', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-context-support', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-expression', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-jcl', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-jdbc', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-orm', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-tx', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-web', version: versions.springVersion
    implementation group: 'org.springframework', name: 'spring-webmvc', version: versions.springVersion

    implementation "com.github.hmcts.java-logging:logging:${versions.reformLogging}"
    implementation "com.github.hmcts.java-logging:logging-appinsights:${versions.reformLogging}"

    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'
    //Fix for CVE-2021-29425
    implementation 'commons-io:commons-io:2.8.0'


    implementation group: 'io.github.openfeign.form', name: 'feign-form', version: '3.8.0'
    implementation group: 'io.github.openfeign.form', name: 'feign-form-spring', version: '3.8.0'
    implementation "io.github.openfeign:feign-httpclient:11.0"
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: versions.log4j
    implementation "com.github.hmcts.java-logging:logging:${versions.reformLogging}"
    implementation "com.github.hmcts.java-logging:logging-appinsights:${versions.reformLogging}"
    
    

    testImplementation ('com.github.hmcts:rd-commons-lib:v0.0.13'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
    }


    testImplementation group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0'

    testImplementation("org.hamcrest:hamcrest-junit:2.0.0.0") {
        exclude group: "org.hamcrest", module: "hamcrest-core"
        exclude group: "org.hamcrest", module: "hamcrest-library"
    }

    testImplementation group: 'org.testcontainers', name: 'postgresql', version: versions.testContainer_postgresql
    testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: versions.testContainer_postgresql
    testImplementation group: 'org.testcontainers', name: 'testcontainers', version: versions.testContainer_postgresql

    testImplementation ("org.mockito:mockito-inline:4.4.0") {
        exclude group: "net.bytebuddy", module: "byte-buddy"
        exclude group: "net.bytebuddy", module: "byte-buddy-agent"
    }
    testImplementation group: 'net.bytebuddy', name: 'byte-buddy', version: versions.bytebuddy
    testImplementation group: 'net.bytebuddy', name: 'byte-buddy-agent', version: versions.bytebuddy

    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '4.3.1'
    testImplementation group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.9'

    testImplementation('com.github.tomakehurst:wiremock:2.32.0') {
        exclude group: 'com.github.jknack'
    }

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot


    testImplementation group: 'com.github.mifmif', name: 'generex', version: '1.0.2'

    testImplementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'
    testImplementation group: 'org.pitest', name: 'pitest', version: versions.pitest
    testImplementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.4.0'
    testImplementation group: 'org.pitest', name: 'pitest-junit5-plugin', version: '0.15'

    testImplementation (group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity)

    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: versions.springBoot


    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.33'

    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version

    contractTestImplementation("org.junit.jupiter:junit-jupiter-api:5.8.1")
    contractTestImplementation("org.junit.jupiter:junit-jupiter-engine:5.8.2")
    contractTestImplementation('org.junit.jupiter:junit-jupiter-api:5.7.1')
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version

    integrationTestImplementation sourceSets.main.runtimeClasspath
    integrationTestImplementation sourceSets.test.runtimeClasspath

    functionalTestImplementation sourceSets.main.runtimeClasspath
    functionalTestImplementation sourceSets.test.runtimeClasspath

    smokeTestImplementation sourceSets.main.runtimeClasspath
    smokeTestImplementation sourceSets.test.runtimeClasspath

    contractTestImplementation sourceSets.main.runtimeClasspath
    contractTestImplementation sourceSets.test.runtimeClasspath

    pactTestImplementation sourceSets.main.runtimeClasspath
    pactTestImplementation sourceSets.test.runtimeClasspath
}

dependencyManagement {

    dependencies {
        // CVE-2021-42340
        dependencySet(group: 'org.apache.tomcat.embed', version: '9.0.69') {
            entry 'tomcat-embed-core'
            entry 'tomcat-embed-el'
            entry 'tomcat-embed-websocket'
        }
    }
}

dependencyCheck {
    suppressionFile = 'config/owasp/suppressions.xml'
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

gradle.startParameter.continueOnFailure = true

bootJar {
    archiveFileName = jarName
    manifest {
        attributes('Implementation-Version': project.version.toString())
    }
}

// this is required to force Java running on the Azure Windows Server OS into using
// UTF-8 as the default character set instead of windows-1252 which causes issues.
// this setting only applies when running via gradle bootRun -- see web.config for the
// java flag that configures the deployed applications
applicationDefaultJvmArgs = ["-Dfile.encoding=UTF-8"]

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

rootProject.tasks.named("processSmokeTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processFunctionalTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processIntegrationTestResources") {
    duplicatesStrategy = 'include'
}

rootProject.tasks.named("processContractTestResources") {
    duplicatesStrategy = 'include'
}

